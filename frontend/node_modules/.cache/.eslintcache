[{"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\index.js":"1","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\App.js":"2","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Home.js":"3","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Navbar.jsx":"4","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Register.jsx":"5","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Login.jsx":"6","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\store.js":"7","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\AuthSlice.js":"8","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\index.js":"9","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Profile.js":"10","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\AlertSlice.js":"11","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\index.js":"12","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Alert.jsx":"13","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\SkeletonLoading.jsx":"14","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Upload.js":"15","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\PostSlice.js":"16","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\utils\\images.js":"17","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\ProfileSlice.js":"18"},{"size":468,"mtime":1680317715116,"results":"19","hashOfConfig":"20"},{"size":877,"mtime":1680354647682,"results":"21","hashOfConfig":"20"},{"size":2723,"mtime":1680356138496,"results":"22","hashOfConfig":"20"},{"size":2306,"mtime":1680357584077,"results":"23","hashOfConfig":"20"},{"size":3376,"mtime":1680357213340,"results":"24","hashOfConfig":"20"},{"size":2813,"mtime":1680354186491,"results":"25","hashOfConfig":"20"},{"size":410,"mtime":1680353120086,"results":"26","hashOfConfig":"20"},{"size":2727,"mtime":1680357227340,"results":"27","hashOfConfig":"20"},{"size":145,"mtime":1680316297136,"results":"28","hashOfConfig":"20"},{"size":2071,"mtime":1680356110992,"results":"29","hashOfConfig":"20"},{"size":840,"mtime":1680312744145,"results":"30","hashOfConfig":"20"},{"size":265,"mtime":1680312517985,"results":"31","hashOfConfig":"20"},{"size":611,"mtime":1680312936090,"results":"32","hashOfConfig":"20"},{"size":148,"mtime":1680280298669,"results":"33","hashOfConfig":"20"},{"size":3910,"mtime":1680348440154,"results":"34","hashOfConfig":"20"},{"size":1769,"mtime":1680357684775,"results":"35","hashOfConfig":"20"},{"size":228,"mtime":1680350112862,"results":"36","hashOfConfig":"20"},{"size":1040,"mtime":1680353879039,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1euzhaj",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\index.js",[],[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\App.js",["101","102"],[],"import { Routes,Route } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Home ,\r\n  Upload,\r\n  Profile\r\n} from './screens';\r\nimport { useEffect } from \"react\";\r\nimport { getAllPosts } from \"./slices/PostSlice\";\r\nimport { closeAlert } from \"./slices/AlertSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { auth,alert } = useSelector(state=>state);\r\n\r\n  useEffect(() => {\r\n \r\n    dispatch(getAllPosts());\r\n\r\n    setTimeout(() => {\r\n      dispatch(closeAlert());\r\n    },3000)\r\n\r\n  } ,[auth,alert]);\r\n\r\n  return (\r\n   <div className=\"w-full\">\r\n      <Routes>\r\n        <Route index element={<Home />}></Route>\r\n        <Route path=\"/create\" element={<Upload/>}/>\r\n        <Route path=\"/profile\" element={<Profile/>}/>\r\n      </Routes>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Home.js",["103"],[]," import Navbar from \"../components/Navbar\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport images from \"../utils/images\";\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\n\r\n\r\n// import required modules\r\nimport { Pagination,Autoplay } from \"swiper\";\r\n\r\nfunction Home({ token ,setToken }) {\r\n  const { posts:{ posts } } = useSelector(state=>state);\r\n\r\n    const [login,setlogin]=useState (false)\r\n    const [register,setregister]=useState (false)\r\n\r\n\r\n  return (\r\n    \r\n   <div className=\"w-full min-h-screen\">\r\n      <Navbar setlogin={setlogin} setregister={setregister}/>\r\n      <Login  setlogin={setlogin} login={login}/>\r\n      <Register setlogin={setlogin} setregister={setregister} register={register}/>\r\n      <section className=\"w-full\">\r\n        <Swiper\r\n            slidesPerView={\"auto\"}\r\n            spaceBetween={30}\r\n            pagination={{\r\n              clickable: true,\r\n            }}\r\n            modules={[Pagination,Autoplay]}\r\n            className=\"mySwiper\"\r\n        >\r\n           <SwiperSlide>\r\n             <div className=\"w-full relative\">\r\n             <div className=\"w-full h-full absolute top-0 left-0\" style={{backgroundColor:\"rgba(10,10,10,0.3)\"}}></div>\r\n             <img src={images.banner1} alt='banner1' className=\"w-full object-cover h-[550px]\"/>\r\n             </div>\r\n           </SwiperSlide>\r\n           <SwiperSlide>\r\n            <div className=\"w-full relative\">\r\n              <div className=\"w-full h-full absolute top-0 left-0\" style={{backgroundColor:\"rgba(10,10,10,0.3)\"}}></div>\r\n             <img src={images.banner2} alt='banner1' className=\"w-full object-cover h-[550px]\"/>\r\n            </div>\r\n           </SwiperSlide>\r\n           <SwiperSlide>\r\n            <div className=\"w-full relative\">\r\n            <div className=\"w-full h-full absolute top-0 left-0\" style={{backgroundColor:\"rgba(10,10,10,0.3)\"}}></div>\r\n             <img src={images.banner3} alt='banner1' className=\"w-full object-cover h-[550px]\"/>\r\n            </div>\r\n           </SwiperSlide>\r\n\r\n        </Swiper>\r\n      </section>\r\n      <section className=\"w-full py-10 px-7  grid grid-cols-4 gap-x-3\">\r\n        {posts?.map((post, idx) => (\r\n          <div className=\"w-full cursor-pointer\" key={idx}>\r\n            <img src={`http://127.0.0.1:8000/storage/posts_image/${post.image}`} alt={post.title} className=\"w-full h-[220px] rounded-lg\" />\r\n          </div>\r\n        ))}\r\n      </section>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Navbar.jsx",["104","105","106","107"],[],"import logo from '../assets/logo.png';\r\nimport decode from 'jwt-decode';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { logoutHandler } from '../slices/AuthSlice';\r\n\r\nfunction Navbar({setlogin,setregister}) \r\n{\r\n  \r\n  const dispatch = useDispatch();\r\n  const { auth:{ token, user } } = useSelector(state=>state);\r\n\r\n\r\n  return (\r\n   <div className='flex flex-row bg-white justify-between py-4 px-4'>\r\n      <div className='flex flex-row items-center space-x-6'>\r\n      <img className='items-center w-[54px]'src={logo}></img>\r\n      <div className='flex flex-row items-center space-x-5'>\r\n      <Link to=\"/\">\r\n      <p className='text-[#FF5AC7] font-semibold'>Home</p>\r\n      </Link>\r\n      <p className='text-[#6F6F6F] font-[400]'>Search</p>\r\n      <p className='text-[#6F6F6F] font-[400]'>Categories</p>\r\n      </div>\r\n      </div>\r\n     {token ? (\r\n      <div className='flex items-center'>\r\n       <Link to=\"/profile\">\r\n       <div className='flex items-center'>\r\n        <span className={`w-[46px] text-white font-bold h-[46px] rounded-full bg-pink-500 flex items-center justify-center uppercase`}>\r\n           {user?.username?.charAt(0)}\r\n         </span>\r\n         <p className='text-md font-medium ml-3'>{user?.display_name}</p>\r\n          </div>\r\n       </Link>\r\n\r\n         <button onClick={()=>dispatch(logoutHandler())} className='text-pink-500 border border-pink-500 font-medium ml-7  py-2 px-4 text-sm rounded-full'>Logout</button>\r\n         <Link to=\"/create\">\r\n          <button className=\"bg-pink-500 font-medium ml-3 text-white py-2 px-4 text-sm rounded-full\">Create</button>\r\n         </Link>\r\n      </div>\r\n     ) : (\r\n       <div className='flex flex-row items-center space-x-4'>\r\n       <button className='w-[60px] h-[35px] bg-[#FF5AC7] rounded-md ' onClick={()=>setlogin(true)}>\r\n         <p className='font-semibold text-white'>Login</p>\r\n         </button>\r\n         <button className='w-[70px] h-[35px] rounded-md outline-1 outline outline-[#FF5AC7] hover:bg-[#FF5AC7] ' onClick={()=>setregister(true)}>\r\n       <p className='text-[#FF5AC7] font-semibold hover:text-white'>Sign Up</p>\r\n         </button>\r\n       </div>\r\n     )}\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Register.jsx",["108","109","110"],[],"import { useState } from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport logo from '../assets/logo.png';\r\nimport axios from 'axios';\r\nimport Alert from './Alert';\r\nimport { registerHandler } from '../slices/AuthSlice';\r\n\r\nfunction Register ({setregister,register,setlogin}) \r\n{\r\n    const dispatch = useDispatch();\r\n    const { alert,auth } = useSelector(state=>state);\r\n\r\n    const [registerForm,setRegisterForm] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        confirm:\"\",\r\n        display_name:\"\",\r\n        username:\"\"\r\n    })\r\n\r\n    const submitHandler = async (e) =>{ \r\n        e.preventDefault();\r\n        dispatch(registerHandler({ registerForm,dispatch,setlogin,setregister }));\r\n\r\n    }\r\n\r\n    const changeHandler = (e) => setRegisterForm({...registerForm , [e.target.name]:e.target.value});\r\n\r\n    if (!register) return \r\n    \r\n    return (\r\n<div style={{backgroundColor:'rgba(0,0,0,0.5)'}} className='z-[9999] fixed top-0 left-0 h-screen w-full' onClick={(e)=>{\r\n    if (e.target.className.includes(\"fixed\"))\r\n    {\r\n        setregister(false);\r\n    }\r\n}}>\r\n        <div className=' form flex items-center justify-start top-[50%] translate-y-[-50%] min-h-min w-[400px] flex-col bg-white py-12 pb-12 py- absolute left-[50%] translate-x-[-50%] rounded-md'>\r\n        {alert.open ? <Alert/> : null}\r\n        <img src={logo} className='w-18'></img>\r\n        <h1>Welcome to Inspobox</h1>\r\n        <h2>Finds new idea to try</h2>\r\n        <div className='py-2 space-y-2'>\r\n        <div className='flex justify-start '>\r\n        <input onChange={changeHandler} name=\"email\" className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Email'></input>\r\n        </div>\r\n        <div className='flex justify-start '>\r\n        <input onChange={changeHandler} name=\"display_name\" className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Display Name'></input>\r\n        </div>\r\n        <div className='flex justify-start '>\r\n        <input onChange={changeHandler} name=\"username\" className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Username'></input>\r\n        </div>\r\n        <div className='flex justify-start '>\r\n        <input onChange={changeHandler} name=\"password\" type=\"password\" className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Create Password'></input>\r\n        </div>\r\n        <div className='flex justify-start flex-col'>\r\n        <input onChange={changeHandler} name=\"confirm\" type=\"password\" className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Confirm Password'></input>\r\n        <p className='text-[#6F6F6F] font-bold text-xs py-1'>Forgot your password?</p>\r\n        </div>\r\n        <div className='flex items-center flex-col py-4'>\r\n            <button onClick={submitHandler} className='flex flex-row justify-center items-center bg-[#FF5AC7] w-[250px] h-[35px] px-4 rounded-md'>\r\n             <p className='font-semibold text-white'>Create Account</p>\r\n            </button>      \r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n  }\r\nexport default Register;","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Login.jsx",["111","112"],[],"import logo from '../assets/logo.png'\r\nimport Facebook from '../assets/Facebook.png';\r\nimport Alert from './Alert';\r\nimport { useState } from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { loginHandler } from '../slices/AuthSlice';\r\n\r\nfunction Login({setlogin, login}) {\r\n    const { alert } = useSelector(state=>state);\r\n    const dispatch = useDispatch();\r\n    const [loginForm,setLoginForm] = useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    \r\n    const submitHandler = async (e)=>{\r\n        e.preventDefault();\r\n        dispatch(loginHandler({ loginForm,dispatch,setlogin }));\r\n    }\r\n\r\n    const changeHandler = (e)=>setLoginForm({...loginForm,[e.target.name]:e.target.value});\r\n\r\n\r\n    if (!login) return\r\n\r\n    return (\r\n<div style={{backgroundColor:'rgba(0,0,0,0.5)'}} className='z-[9999] fixed top-0 left-0 h-screen w-full' onClick={(e)=>{\r\n    if (e.target.className.includes(\"fixed\"))\r\n    {\r\n        setlogin(false)\r\n    }\r\n}}>\r\n    <form onSubmit={submitHandler} className='form flex items-center justify-start top-[50%] translate-y-[-50%]  w-[400px] flex-col bg-white py-12 pb-48 py- absolute left-[50%] translate-x-[-50%] rounded-md'>\r\n        <div className='px-5 w-full'>\r\n        {alert.open ? <Alert/> : null}\r\n        </div>\r\n        <img src={logo} className='w-18'></img>\r\n        <div className='flex justify-start flex-col'>\r\n        <p className='font-normal py-1'>Email</p>\r\n        <input name='email' value={loginForm?.email} onChange={changeHandler} className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Email'></input>\r\n        </div>\r\n        <div className='flex justify-start flex-col'>\r\n        <p className='font-normal py-1'>Password</p>\r\n        <input name='password' type='password' value={loginForm?.password} onChange={changeHandler} className='outline outline-1 rounded w-[250px] h-[30px] flex justify-start px-2 py-1 font-light text-[#6F6F6F]' placeholder='Password'></input>\r\n        <p className='text-[#6F6F6F] font-bold text-xs py-1'>Forgot your password?</p>\r\n        <div className='flex items-center flex-col py-4'>\r\n            <button className='flex flex-row justify-center items-center bg-[#FF5AC7] w-[250px] h-[35px] px-4 rounded-md'>\r\n        <p className='font-semibold text-white'>Login</p>\r\n            </button>\r\n        <p className='font-semibold'>OR</p>\r\n            <button type='submit' className='flex flex-row space-x-2 items-center bg-[#0075FE] w-[250px] h-[35px] px-4 rounded-md'>\r\n        <img src={Facebook} className='w-4 h-4'></img><p className='font-semibold text-white'>Continue With Facebook</p>\r\n            </button>\r\n      \r\n        </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n    )\r\n  }\r\n  \r\n  export default Login;","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\store.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\AuthSlice.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\index.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Profile.js",["113","114"],[],"import { useState,useEffect } from \"react\";\r\nimport { Navbar } from \"../components\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { GetProfilePosts } from \"../slices/ProfileSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n   const { auth:{ user,token },profile } = useSelector(state=>state);\r\n\r\n   useEffect(() => {\r\n      if(!token) {\r\n         navigate(\"/\");\r\n      }\r\n      \r\n     dispatch(GetProfilePosts({ userid:user.id }));\r\n\r\n     console.log(\"test\");\r\n   },[token]);\r\n   \r\n     return (\r\n        <div className=\"w-full min-h-screen\">\r\n           <Navbar/>\r\n           <section className=\"flex items-center justify-center w-full py-10 flex-col\">\r\n             {user?.profile ? null : (\r\n                  <span className={`w-[100px] text-white text-3xl font-bold h-[100px] rounded-full bg-pink-500 flex items-center justify-center uppercase`}>\r\n                  {user?.username?.charAt(0)}\r\n                </span>\r\n             )}\r\n             <div className=\"text-center mt-5\">\r\n                <h2 className=\"text-2xl font-bold\">{user?.username}</h2>\r\n                <p className=\"text-gray-500 text-md mt-2\">{user?.display_name}</p>\r\n                <div className=\"flex items-center gap-x-3 mt-7\">\r\n                    <button className=\"bg-gray-100 font-medium text-sm py-3 px-3 rounded-md\"> Edit Profile </button>\r\n                    <button className=\"bg-gray-100 font-medium text-sm py-3 px-3 rounded-md\">Share</button>\r\n                </div>\r\n             </div>\r\n           </section>\r\n           <section className=\"mt-10 grid px-7 grid-cols-5 gap-x-3\">\r\n            {profile?.posts.map((post,idx) => (\r\n                 <div className=\"w-full\" key={idx}>\r\n                 <img src={`http://127.0.0.1:8000/storage/posts_image/${post.image}`} alt={post.title} className=\"w-full h-[220px] rounded-lg\" />\r\n               </div>\r\n            ))}\r\n           </section>\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default Profile;","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\AlertSlice.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\index.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\Alert.jsx",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\components\\SkeletonLoading.jsx",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\screens\\Upload.js",["115","116"],[],"import { Navbar } from \"../components\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { createPost } from \"../slices/PostSlice\";\r\n\r\nconst Upload = () => {\r\n    const dispatch = useDispatch();\r\n    const { auth:{ user , token }, posts } = useSelector(state=>state); \r\n\r\n    const [imagePreview,setImagePreview] = useState(null);\r\n    const [postForm,setPostForm] = useState({\r\n            title:\"\",\r\n            image:\"\",\r\n            description:\"\",\r\n            user_id:user?.id \r\n        });\r\n    \r\n    const changeHandler = (e) => {\r\n        e.preventDefault();\r\n        setPostForm({...postForm, [e.target.name]:e.target.value});\r\n    }\r\n\r\n    const imageHandler = (element) => {\r\n        const file = element.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = function() {\r\n            setPostForm({...postForm, image:file});\r\n            setImagePreview(reader.result);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n       dispatch(createPost({ postForm,setPostForm }))\r\n\r\n    \r\n    }\r\n\r\n    const cancelPost = () => {\r\n        postForm.delete('title');\r\n        postForm.delete('description');\r\n        postForm.delete('image');\r\n        setImagePreview(null);\r\n    }\r\n \r\n    return (\r\n        <div className=\"w-full bg-gray-100 min-h-screen\">\r\n            <Navbar/>\r\n            <div className=\"w-[50vw] py-5 mt-10 px-5 mx-auto bg-white rounded-lg flex justify-between items-start\">\r\n                <input onChange={imageHandler} type=\"file\" className=\"hidden\" id=\"image\" name=\"image\"/>\r\n                <label htmlFor=\"image\" className=\"bg-gray-100 rounded-lg w-[48%] h-[330px] flex py-2 px-2 justify-center items-center\">\r\n               {imagePreview ? <img src={imagePreview} alt=\"preview\" className=\"w-full rounded-lg h-full\"/> :  <i className=\"ri-image-add-line text-5xl text-gray-500\"></i>}\r\n                </label>\r\n                <form onSubmit={submitHandler} className=\"w-[48%]\">\r\n                    <div className=\"flex items-start gap-x-3\">\r\n                    <span className={`w-[46px] text-white font-bold h-[46px] rounded-full bg-pink-500 flex items-center justify-center uppercase`}>\r\n                    {user?.username?.charAt(0)}\r\n                   </span>\r\n                   <div className=\"flex flex-col\">\r\n                    <h5 className=\"text-[15px] font-bold\">{user?.display_name}</h5>\r\n                    <p className=\"text-[12px] font-medium text-gray-500\">{user?.username}</p>\r\n                   </div>\r\n                    </div>\r\n                    <div className=\"flex mt-5 flex-col gap-y-2\">\r\n                        <label className=\"font-semibold text-[15px]\">Title</label>\r\n                        <input onChange={changeHandler} value={postForm.title} name='title' type=\"text\" className=\"w-full bg-gray-100 rounded-md outline-none py-2 px-3\"/>\r\n                    </div>\r\n                    <div className=\"flex mt-3 flex-col gap-y-2\">\r\n                        <label className=\"font-semibold text-[15px]\">Description</label>\r\n                        <textarea onChange={changeHandler} value={postForm.description} name='description' type=\"text\" className=\"w-full bg-gray-100 rounded-md outline-none py-2 px-3\"></textarea>\r\n                    </div>\r\n                    <div className=\"flex justify-end items-center text-white mt-10 gap-x-3\">\r\n                        <button type=\"submit\" className=\"bg-pink-500 text-[15px] font-semibold py-1 px-3 rounded-md\">Save</button>\r\n                        <button type=\"button\" onClick={cancelPost} className=\"text-pink-500 border border-pink-500 text-[15px] font-semibold py-1 px-3 rounded-md\">Cancel</button>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload;","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\PostSlice.js",["117","118"],[],"import { createSlice,createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { Form } from 'react-router-dom';\r\n\r\nconst user = JSON.parse(localStorage.getItem('token'));\r\n\r\nconst API = axios.create({\r\n    baseURL:`${process.env.REACT_APP_BASE_API_URL}/posts`\r\n});\r\n\r\nAPI.interceptors.request.use(request => {\r\n    if(user){\r\n        request.headers.Authorization = `Bearer ${user}`;\r\n    }\r\n\r\n    return request;\r\n});\r\n\r\nexport const getAllPosts = createAsyncThunk('post/get' , async () => {\r\n     try {\r\n        const { data } = await API.get('/all');\r\n        if(data) {\r\n            return data;\r\n        }\r\n\r\n     } catch(err) {\r\n        return null;\r\n     }\r\n});\r\n\r\nexport const createPost = createAsyncThunk('post/create' , async ({ postForm,setPostForm }) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('title' , postForm.title);\r\n        formData.append('description',postForm.description);\r\n        formData.append('image' , postForm.image);\r\n        formData.append('user_id' , postForm.user_id);\r\n\r\n        const { data } = await API.post('/create' , formData);\r\n\r\n        if(data) {\r\n        setPostForm({\r\n          title:\"\",\r\n          image:\"\",\r\n          description:\"\"\r\n       });\r\n\r\n            window.location.href = \"/\";\r\n\r\n            return data;\r\n        }\r\n\r\n    } catch(err) {\r\n        return null;\r\n    }\r\n});\r\n\r\nconst PostSlice = createSlice({\r\n    name:'post',\r\n    initialState: {\r\n        posts:[],\r\n        loading:false \r\n    },\r\n    extraReducers:(builder) => {\r\n        builder.addCase(getAllPosts.fulfilled,(state, { payload }) => {\r\n            state.posts = payload;\r\n\r\n            return state;\r\n        })\r\n    }\r\n});\r\n\r\nexport default PostSlice.reducer;","D:\\programmer\\project-pl\\inspobox\\frontend\\src\\utils\\images.js",[],[],"D:\\programmer\\project-pl\\inspobox\\frontend\\src\\slices\\ProfileSlice.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":26,"column":6,"nodeType":"125","endLine":26,"endColumn":18,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"128","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"127","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":4,"column":21,"nodeType":"121","messageId":"122","endLine":4,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":18,"column":7,"nodeType":"131","endLine":18,"endColumn":56},{"ruleId":"119","severity":1,"message":"132","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"133","line":11,"column":19,"nodeType":"121","messageId":"122","endLine":11,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":40,"column":9,"nodeType":"131","endLine":40,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":38,"column":9,"nodeType":"131","endLine":38,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":53,"column":9,"nodeType":"131","endLine":53,"endColumn":49},{"ruleId":"119","severity":1,"message":"120","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},{"ruleId":"123","severity":1,"message":"134","line":20,"column":6,"nodeType":"125","endLine":20,"endColumn":13,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"136","line":8,"column":27,"nodeType":"121","messageId":"122","endLine":8,"endColumn":32},{"ruleId":"119","severity":1,"message":"137","line":8,"column":36,"nodeType":"121","messageId":"122","endLine":8,"endColumn":41},{"ruleId":"119","severity":1,"message":"138","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":27},{"ruleId":"119","severity":1,"message":"139","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'useEffect' is defined but never used.","'decode' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'auth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'user.id'. Either include them or remove the dependency array.",["141"],"'token' is assigned a value but never used.","'posts' is assigned a value but never used.","'formToJSON' is defined but never used.","'Form' is defined but never used.",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [auth, alert, dispatch]",{"range":"146","text":"147"},"Update the dependencies array to be: [dispatch, navigate, token, user.id]",{"range":"148","text":"149"},[585,597],"[auth, alert, dispatch]",[593,600],"[dispatch, navigate, token, user.id]"]